{"version":3,"sources":["actions/index.js","components/GeneralSettings.js","containers/GeneralSettings.js","components/SmallShipDisplay.js","utils/formatCost.js","components/Module.js","containers/Module.js","components/Modules.js","selectors/modules.js","selectors/drives.js","components/Ammo.js","containers/Ammo.js","components/HullType.js","containers/Modules.js","containers/HullType.js","components/HullTypes.js","components/Ammos.js","selectors/defenses.js","selectors/hulls.js","selectors/weapons.js","selectors/index.js","containers/SmallShipDisplay.js","containers/HullTypes.js","components/Drive.js","containers/Drive.js","components/Drives.js","containers/Drives.js","components/Weapon.js","containers/Weapon.js","components/Weapons.js","containers/Weapons.js","components/SidePanel.js","containers/SidePanel.js","components/Options.js","containers/Options.js","components/Defense.js","containers/Defense.js","components/Defenses.js","containers/Defenses.js","containers/Ammos.js","components/ShipDisplay.js","selectors/cargo.js","selectors/ammo.js","containers/ShipDisplay.js","components/App.js","reducers/costModifier.js","reducers/ship/hull.js","reducers/ship/drive.js","reducers/ship/modules.js","reducers/ship/weapons.js","reducers/ship/defenses.js","reducers/ship/ammo.js","reducers/ship/index.js","reducers/name.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["CostModifiers","GeneralSettings","Row","Col","sm","FormGroup","row","Label","for","Input","type","name","id","onInput","e","props","setName","target","value","this","className","costModifier","onChange","event","setCostModifier","Number","Component","connect","state","ownProps","dispatch","modifier","SmallShipDisplay","hull","stats","modules","Object","entries","key","module","push","count","weapons","weapon","defenses","defense","Table","bordered","size","colSpan","style","textAlign","hp","power","ac","mass","armor","minCrew","maxCrew","speed","class","verticalAlign","formatCost","cost","costStr","toString","substr","Module","moduleChanged","bind","toggleModule","data","canIncrease","onIncrease","onDecrease","active","input","extra","max","Button","outline","disabled","color","onClick","width","description","canAddModule","getShipStats","ship","moduleData","Modules","rows","forEach","element","index","striped","hullClass","modified","Math","ceil","require","moduleDataByHull","moduleCostModifier","powerMassCostModifier","powerModifier","massModifier","minClass","changes","getModuleData","createSelector","getModuleStats","shipModules","changeFunction","action","number","driveData","getModifier","getHull","driveDataByHull","drives","getDriveData","getDriveStats","drive","shipDrive","length","constructor","Ammo","ammoChanged","qualities","totalAmmoCost","costPerShot","ammoCost","ammo","damage","canAddAmmo","ammoData","HullType","setHull","hardpoints","isSelectable","propType","PropTypes","shape","string","isRequired","bool","func","hullSupportsElement","shipHull","HullTypes","getHullValue","maxClass","map","filter","newStats","calcShipStats","calcValidShip","hullData","hulls","Ammos","ammos","ammoClass","defensesData","defensesDataByHull","includes","ammoCountDifference","getDefensesData","getDefensesStats","shipDefenses","hullDataByDrive","driveModifier","ships","getHullData","getRawHullStats","getHullStats","change","amount","rawWeaponData","weaponDataByHull","getWeaponData","getWeaponStats","shipWeapons","undefined","moduleName","weaponName","defenseName","ammoConsumers","ammoName","Drive","selectDrive","onDeselect","onSelect","oldDrive","newDrive","driveStats","setSpikeDrive","Drives","Weapon","weaponChanged","ap","techLevel","canAddWeapon","weaponData","Weapons","SidePanel","hullType","Options","clear","confirmAlert","title","message","buttons","label","clearAll","export","exportState","exportString","encodeURIComponent","JSON","stringify","dlAnchorElem","document","getElementById","setAttribute","click","triggerImport","importData","a","preventDefault","reader","FileReader","onload","content","result","parse","onImport","files","readAsText","xs","href","display","object","onExport","importShip","Defense","selectDefense","defenseData","Defenses","ShipDisplay","show","toggle","setState","Modal","isOpen","maxWidth","ModalBody","rawHull","cargo","cargoSpace","hiddenCargoSpace","ModalFooter","getCargo","hullModifier","getAmmoStats","shipAmmo","App","Container","fluid","minWidth","Form","marginBottom","addItem","removeItem","combineReducers","itemData","appReducer","rootReducer","console","log","persistConfig","storage","persistedReducer","persistReducer","persistedStore","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Boolean","location","hostname","match","ReactDOM","render","loading","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce21e6d7.chunk.js","sourcesContent":["export const CostModifiers = {\n  UNCOMMON: 1,\n  COMMON: 0.5,\n  FREQUENT: 0.25,\n};\n\nexport const setCostModifier = modifier => ({\n  type: 'SET_COST_MODIFIER',\n  modifier,\n});\n\nexport const clear = () => ({\n  type: 'CLEAR',\n});\n\nexport const setName = name => ({\n  type: 'SET_NAME',\n  name,\n});\n\nexport const setHullType = hullData => ({\n  type: 'SET_HULL_TYPE',\n  hullData,\n});\n\nexport const addModule = moduleData => ({\n  type: 'ADD_MODULE',\n  moduleData,\n});\n\nexport const removeModule = moduleData => ({\n  type: 'REMOVE_MODULE',\n  moduleData,\n});\n\nexport const addWeapon = weaponData => ({\n  type: 'ADD_WEAPON',\n  weaponData,\n});\n\nexport const removeWeapon = weaponData => ({\n  type: 'REMOVE_WEAPON',\n  weaponData,\n});\n\nexport const addDefense = defenseData => ({\n  type: 'ADD_DEFENSE',\n  defenseData,\n});\n\nexport const removeDefense = defenseData => ({\n  type: 'REMOVE_DEFENSE',\n  defenseData,\n});\n\nexport const addAmmo = ammoData => ({\n  type: 'ADD_AMMO',\n  ammoData,\n});\n\nexport const removeAmmo = ammoData => ({\n  type: 'REMOVE_AMMO',\n  ammoData,\n});\n\nexport const setSpikeDrive = driveData => ({\n  type: 'SET_DRIVE',\n  driveData,\n});\n\nexport const removeSpikeDrive = () => ({\n  type: 'REMOVE_DRIVE',\n});\n\nexport const exportShip = () => ({\n  type: 'EXPORT_SHIP',\n})\n\nexport const importShip = state => ({\n  type: 'IMPORT_SHIP',\n  state,\n})","import React, { Component } from 'react';\nimport { Label, Input, FormGroup, Col, Row } from 'reactstrap';\nimport { CostModifiers } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass GeneralSettings extends Component {\n  render() {\n    return(\n      <div>\n        <Row>\n          <Col sm=\"auto\">\n            <h3>General Settings</h3>\n          </Col>\n        </Row>\n        <FormGroup row>\n          <Label sm={2} for=\"name\">Ship name</Label>\n          <Col sm=\"auto\">\n            <Input\n              type=\"text\"\n              name=\"Ship Name\"\n              id=\"name\"\n              onInput={(e) => this.props.setName(e.target.value)}\n              value={this.props.name}\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label sm={2} for=\"costModifier\">Ship scarcity</Label>\n          <Col sm=\"auto\">\n            <select\n              className=\"form-control\"\n              id=\"costModifier\"\n              name=\"cost modifier\"\n              value={this.props.costModifier}\n              onChange={(event) => this.props.setCostModifier(Number(event.target.value))}\n            >\n              <option value={CostModifiers.UNCOMMON}>Uncommon</option>\n              <option value={CostModifiers.COMMON}>Common</option>\n              <option value={CostModifiers.FREQUENT}>Frequent</option>\n            </select>\n          </Col>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nGeneralSettings.propTypes = {\n  name: PropTypes.string.isRequired,\n  costModifier: PropTypes.number.isRequired,\n  setName: PropTypes.func.isRequired,\n  setCostModifier: PropTypes.func.isRequired,\n};\n\nexport default GeneralSettings;","import { connect } from 'react-redux';\nimport { setCostModifier, setName } from '../actions';\nimport GeneralSettings from '../components/GeneralSettings';\n\nconst mapStateToProps = (state, ownProps) => ({\n  name: state.name,\n  costModifier: state.costModifier,\n  ...ownProps,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCostModifier: value => dispatch(setCostModifier(value)),\n  setName: value => dispatch(setName(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralSettings);","import React, { Component } from 'react';\nimport { Row, Col, Table } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass SmallShipDisplay extends Component {\n  render() {\n    let hull = this.props.hull;\n    let stats = this.props.stats;\n    let modules = [];\n    for (const [key, module] of Object.entries(this.props.modules)) {\n      modules.push(\n        <Row key={key}>\n          <Col>{key} {module.count > 1 ? `x${module.count}` : null}</Col>\n        </Row>\n      );\n    };\n\n    let weapons = [];\n    for (const [key, weapon] of Object.entries(this.props.weapons)) {\n      weapons.push(\n        <Row key={key}>\n          <Col>{key} x{weapon.count > 1 ? `x${weapon.count}` : null}</Col>\n        </Row>\n      );\n    };\n\n    let defenses = [];\n    for (const [key, defense] of Object.entries(this.props.defenses)) {\n      defenses.push(\n        <Row key={key}>\n          <Col>{key} {defense.count > 1 ? `x${defense.count}` : null}</Col>\n        </Row>\n      )\n    }\n\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col sm={5}>\n          <Table bordered size=\"sm\">\n            <thead>\n              <tr>\n                <th colSpan=\"4\">{hull.name}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style={{textAlign: \"right\"}} sm={2}>HP:</td>\n                <td sm={4}>{stats.hp || 0}</td>\n                <td style={{textAlign: \"right\"}} sm={3}>Power:</td>\n                <td sm={3}>{hull.power}/{stats.power} free</td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\"}} sm={2}>AC:</td>\n                <td sm={4}>{stats.ac}</td>\n                <td style={{textAlign: \"right\"}} sm={3}>Mass:</td>\n                <td sm={3}>{hull.mass}/{stats.mass} free</td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\"}} sm={2}>Armor:</td>\n                <td sm={4}>{stats.armor}</td>\n                <td style={{textAlign: \"right\"}} sm={3}>Crew:</td>\n                <td sm={3}>{hull.minCrew}/{hull.maxCrew}</td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\"}} sm={2}>Speed:</td>\n                <td sm={4}>{stats.speed}</td>\n                <td style={{textAlign: \"right\"}} sm={3}>Hull Class:</td>\n                <td sm={3}>{hull.class}</td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\", verticalAlign: \"middle\"}} sm={2}>Fittings:</td>\n                <td sm={10} colSpan=\"3\">\n                  {modules}\n                </td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\", verticalAlign: \"middle\"}} sm={2}>Weapons:</td>\n                <td sm={10} colSpan=\"3\">\n                  {weapons}\n                </td>\n              </tr>\n              <tr>\n                <td style={{textAlign: \"right\", verticalAlign: \"middle\"}} sm={2}>Defenses:</td>\n                <td sm={10} colSpan=\"3\">\n                  {defenses}\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nSmallShipDisplay.propTypes = {\n  hull: PropTypes.object,\n  modules: PropTypes.object,\n  weapons: PropTypes.object,\n  stats: PropTypes.object,\n};\n\nexport default SmallShipDisplay;","function formatCost(cost) {\r\n  if (cost >= 1000 && cost < 1000000) {\r\n    return (cost / 1000) + \" k\";\r\n  }\r\n  else if (cost >= 1000000) {\r\n    let costStr = cost.toString();\r\n    costStr = costStr.substr(-3, 3);\r\n    if (costStr === \"000\") {\r\n      return (cost / 1000000) + \" m\";\r\n    }\r\n    else { return cost; }\r\n  }\r\n  else {\r\n    return cost;\r\n  }\r\n}\r\n\r\nexport default formatCost;","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport formatCost from \"../utils/formatCost\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\n\nclass Module extends Component {\n  constructor() {\n    super();\n    this.moduleChanged = this.moduleChanged.bind(this);\n    this.toggleModule = this.toggleModule.bind(this);\n  }\n\n  moduleChanged(count) {\n    let data = {\n      name: this.props.data.name,\n    };\n    if (this.props.canIncrease && count > this.props.value) {\n      this.props.onIncrease(data);\n    } else if (count < this.props.value) {\n      this.props.onDecrease(data);\n    }\n  }\n\n  toggleModule(active) {\n    if (active) {\n      this.moduleChanged(0);\n    } else {\n      this.moduleChanged(1);\n    }\n  }\n\n  render() {\n    let input;\n    if (this.props.data.extra && this.props.data.extra.max === 1) {\n      let active = this.props.value > 0;\n      input = (\n        <Button\n          outline\n          disabled={!active && !this.props.canIncrease}\n          color={\"primary\"}\n          size=\"sm\"\n          onClick={() => this.toggleModule(active)}\n          active={active}\n          style={{ width: \"100%\" }}\n        >\n          Select\n        </Button>\n      );\n    } else {\n      input = (\n        <div>\n          {this.props.value}\n          <AddCircleIcon\n            color={this.props.canIncrease ? \"primary\" : \"disabled\"}\n            onClick={(e) => {\n              this.moduleChanged(this.props.value + 1);\n            }}\n          />\n          <RemoveCircleIcon\n            color={this.props.value > 0 ? \"primary\" : \"disabled\"}\n            onClick={(e) => {\n              this.moduleChanged(this.props.value - 1);\n            }}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <tr>\n        <td>{this.props.data.name}</td>\n        <td style={{textAlign: \"right\"}}>{formatCost(this.props.data.cost)}</td>\n        <td>{this.props.data.power}</td>\n        <td>{this.props.data.mass}</td>\n        <td>{this.props.data.description}</td>\n        <td>{input}</td>\n      </tr>\n    );\n  }\n}\n\nModule.propTypes = {\n  value: PropTypes.number.isRequired,\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    cost: PropTypes.number.isRequired,\n    power: PropTypes.number.isRequired,\n    mass: PropTypes.number.isRequired,\n    minClass: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    extra: PropTypes.shape({\n      max: PropTypes.number,\n      maxClass: PropTypes.string,\n    }),\n  }).isRequired,\n  onIncrease: PropTypes.func.isRequired,\n  onDecrease: PropTypes.func.isRequired,\n};\n\nexport default Module;\n","import { connect } from \"react-redux\";\nimport Module from \"../components/Module\";\nimport { addModule, removeModule } from \"../actions\";\nimport { getShipStats } from \"../selectors\";\n\nconst canAddModule = (stats, module) => {\n  if (stats.power - module.power < 0 || stats.mass - module.mass < 0) {\n    return false;\n  }\n  return true;\n};\n\nconst mapStatetoProps = (state, ownProps) => {\n  const stats = getShipStats(state);\n\n  let value = 0;\n  if (state.ship.modules[ownProps.data.name]) {\n    value = state.ship.modules[ownProps.data.name].count;\n  }\n\n  return {\n    value: value,\n    canIncrease: canAddModule(stats, ownProps.data),\n    ...ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onIncrease: (data) => dispatch(addModule(data)),\n  onDecrease: (data) => dispatch(removeModule(data)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Module);\n","import React, { Component } from 'react';\nimport { Table, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Module from '../containers/Module';\n\nclass Modules extends Component {\n  // Some modules cost more money the bigger the ship.\n  static moduleCostModifier(hullClass, modified, cost) {\n    if (modified) {\n      if (hullClass === \"Frigate\") {\n        return cost*10;\n      }\n      else if (hullClass === \"Cruiser\") {\n        return cost*25;\n      }\n      else if (hullClass === \"Capital\") {\n        return cost*100;\n      }\n    }\n    return cost\n  }\n\n  // Some modules increase the power consumption on bigger ships.\n  static powerMassCostModifier(hullClass, modified, cost) {\n    if (modified) {\n      if (hullClass === \"Frigate\") {\n        return Math.ceil(cost*2);\n      }\n      else if (hullClass === \"Cruiser\") {\n        return Math.ceil(cost*3);\n      }\n      else if (hullClass === \"Capital\") {\n        return Math.ceil(cost*4);\n      }\n    }\n    return cost\n  }\n\n  render() {\n    let rows = [];\n    this.props.modules.forEach((element, index) => {\n      rows.push(\n        <Module key={index}\n          data={element}\n        />\n      );\n    });\n\n    return(\n      <div>\n        <Row>\n          <Col sm=\"auto\">\n            <h3>Modules</h3>\n          </Col>\n        </Row>\n        <Table className=\"centerTable\" striped size=\"sm\">\n          <thead>\n            <tr>\n              <th style={{width: \"26.32%\"}}>Ship Fitting</th>\n              <th style={{width: \"6.33%\"}}>Cost</th>\n              <th style={{width: \"7.55%\"}}>Power</th>\n              <th style={{width: \"6.48%\"}}>Mass</th>\n              <th style={{width: \"44.91%\"}}>Description</th>\n              <th style={{width: \"8.33%\"}}></th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nModules.propTypes = {\n  modules: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      cost: PropTypes.number.isRequired,\n      power: PropTypes.number.isRequired,\n      mass: PropTypes.number.isRequired,\n      minClass: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      extra: PropTypes.shape({\n        max: PropTypes.number,\n        maxClass: PropTypes.string,\n      }),\n    }).isRequired\n  ).isRequired,\n}\n\nexport default Modules","import { createSelector } from \"reselect\";\nimport Modules from \"../components/Modules\";\n\nconst moduleData = require(\"../utils/data/modules.json\");\n\nconst getHull = (state) => state.ship.hull;\nconst getModifier = (state) => state.costModifier;\nconst getModules = (state) => state.ship.modules;\n\nexport const moduleDataByHull = (hull, modifier) => {\n  const modules = {};\n  for (const [name, element] of Object.entries(moduleData)) {\n    modules[name] = {\n      name: element.name,\n      cost:\n        Modules.moduleCostModifier(\n          hull.class,\n          element.costModifier,\n          element.cost\n        ) * modifier,\n      power: Modules.powerMassCostModifier(\n        hull.class,\n        element.powerModifier,\n        element.power\n      ),\n      mass: Modules.powerMassCostModifier(\n        hull.class,\n        element.massModifier,\n        element.mass\n      ),\n      minClass: element.minClass,\n      description: element.description,\n      extra: element.extra,\n      changes: element.changes,\n    };\n  }\n  return modules;\n};\n\nexport const getModuleData = createSelector(\n  [getHull, getModifier],\n  (hull, modifier) => {\n    return moduleDataByHull(hull, modifier);\n  }\n);\n\nexport const getModuleStats = createSelector(\n  [getModules, getModuleData],\n  (modules, moduleData) => {\n    const shipModules = {};\n    for (const [name, module] of Object.entries(modules)) {\n      shipModules[name] = {\n        ...moduleData[name],\n        count: module.count,\n      };\n    }\n    return shipModules;\n  }\n);\n\nexport const changeFunction = (action) => {\n  switch (action) {\n    case \"MULT\":\n      return (value, number, count) => value * (number + count - 1);\n    case \"EXP\": // TODO: for the exodus bay\n      return (value, number, count) => value * (number * count);\n    default:\n      return (value, number, count) => value + (number * count);\n  }\n};\n","import { createSelector } from \"reselect\";\nimport Modules from \"../components/Modules\";\n\nconst driveData = require(\"../utils/data/drives.json\");\n\nconst getDrive = (state) => state.ship.drive;\nconst getModifier = (state) => state.costModifier;\nconst getHull = (state) => state.ship.hull;\n\nexport const driveDataByHull = (hull, modifier) => {\n  const drives = {};\n  for (const [name, element] of Object.entries(driveData)) {\n    drives[name] = {\n      name: element.name,\n      cost:\n        Modules.moduleCostModifier(\n          hull.class,\n          element.costModifier,\n          element.cost\n        ) * modifier,\n      power: Modules.powerMassCostModifier(\n        hull.class,\n        element.powerModifier,\n        element.power\n      ),\n      mass: Modules.powerMassCostModifier(\n        hull.class,\n        element.massModifier,\n        element.mass\n      ),\n      minClass: element.minClass,\n      description: element.description,\n    };\n  }\n  return drives;\n};\n\nexport const getDriveData = createSelector(\n  [getHull, getModifier],\n  (hull, modifier) => {\n    return driveDataByHull(hull, modifier);\n  }\n);\n\nexport const getDriveStats = createSelector(\n  [getDrive, getModifier, getHull],\n  (shipDrive, modifier, hull) => {\n    if (\n      Object.entries(shipDrive).length === 0 &&\n      shipDrive.constructor === Object\n    ) {\n      return {};\n    }\n    const drives = driveDataByHull(hull, modifier);\n    return drives[shipDrive.name];\n  }\n);","import React, { Component } from \"react\";\r\nimport formatCost from '../utils/formatCost';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\nclass Ammo extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ammoChanged = this.ammoChanged.bind(this);\r\n  }\r\n  \r\n  ammoChanged(count) {\r\n    const data = {\r\n      name: this.props.data.name,\r\n    };\r\n    if (count > this.props.value && this.props.canIncrease) {\r\n      this.props.onIncrease(data);\r\n    } else if (count >= 0) {\r\n      this.props.onDecrease(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let cost = formatCost(this.props.data.qualities.totalAmmoCost);\r\n    let costPerShot = formatCost(this.props.data.qualities.ammoCost);\r\n\r\n    return (\r\n      <tr>\r\n        <td>{this.props.data.name}</td>\r\n        <td style={{textAlign: \"right\"}}>{cost}</td>\r\n        <td>{this.props.data.qualities.ammo}</td>\r\n        <td>{costPerShot}</td>\r\n        <td>1</td>\r\n        <td>{this.props.data.damage}</td>\r\n        <td>\r\n          <div>\r\n            {this.props.value}\r\n            <AddCircleIcon\r\n              color={this.props.canIncrease ? \"primary\" : \"disabled\"}\r\n              onClick={() => {this.ammoChanged(this.props.value + 1)}}\r\n            />\r\n            <RemoveCircleIcon\r\n              color={this.props.value > 0 ? \"primary\" : \"disabled\"}\r\n              onClick={() => {this.ammoChanged(this.props.value - 1)}}\r\n            />\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ammo\r\n","import { connect } from \"react-redux\";\r\nimport Ammo from \"../components/Ammo\";\r\nimport { addAmmo, removeAmmo } from \"../actions\";\r\nimport { getShipStats } from \"../selectors\";\r\n\r\nconst canAddAmmo = (stats) => {\r\n  return stats.mass > 0;\r\n};\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  const stats = getShipStats(state);\r\n  let value = 0;\r\n  if (state.ship.ammo[ownProps.data.name]) {\r\n    value = state.ship.ammo[ownProps.data.name].count;\r\n  }\r\n  return {\r\n    value: value,\r\n    canIncrease: canAddAmmo(stats, ownProps.data),\r\n    ...ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onIncrease: (data) => dispatch(addAmmo(data)),\r\n  onDecrease: (data) => dispatch(removeAmmo(data)),\r\n});\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Ammo);\r\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport formatCost from '../utils/formatCost';\nimport PropTypes from 'prop-types';\n\nclass HullType extends Component {\n  constructor() {\n    super();\n    this.setHull = this.setHull.bind(this);\n  }\n\n  setHull() {\n    const data = {\n      name: this.props.data.name,\n    }\n    this.props.onClick(data);\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.data.name}</td>\n        <td style={{textAlign: \"right\"}}>{formatCost(this.props.data.cost)}</td>\n        <td>{this.props.data.speed}</td>\n        <td>{this.props.data.armor}</td>\n        <td>{this.props.data.hp}</td>\n        <td>{this.props.data.minCrew} / {this.props.data.maxCrew}</td>\n        <td>{this.props.data.ac}</td>\n        <td>{this.props.data.power}</td>\n        <td>{this.props.data.mass}</td>\n        <td>{this.props.data.hardpoints}</td>\n        <td>{this.props.data.class}</td>\n        <td>\n          <Button\n              outline \n              disabled={!this.props.active && !this.props.isSelectable}\n              color=\"primary\" \n              size=\"sm\" \n              onClick={() => this.props.onClick(this.props.data)} \n              active={this.props.active}>\n            Select\n          </Button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nHullType.propType = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    class: PropTypes.string.isRequired,\n    cost: PropTypes.number.isRequired,\n    modifier: PropTypes.number.isRequired,\n    speed: PropTypes.number.isRequired,\n    armor: PropTypes.number.isRequired,\n    hp: PropTypes.number.isRequired,\n    minCrew: PropTypes.number.isRequired,\n    maxCrew: PropTypes.number.isRequired,\n    ac: PropTypes.number.isRequired,\n    power: PropTypes.number.isRequired,\n    mass: PropTypes.number.isRequired,\n    hardpoints: PropTypes.number.isRequired,\n  }).isRequired,\n  isSelectable: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n}\n\nexport default HullType","import { connect } from \"react-redux\";\nimport HullTypes from \"../components/HullTypes\";\nimport Modules from \"../components/Modules\";\nimport { getModuleData } from \"../selectors/modules\";\n\nexport const hullSupportsElement = (element, shipHull) => {\n  // If no ship hull, return false\n  if (!shipHull) {\n    return false;\n  }\n  // This module won't work on a too small ship\n  if (\n    HullTypes.getHullValue(element.minClass) > HullTypes.getHullValue(shipHull)\n  ) {\n    return false;\n  }\n  // This module won't work on a too big ship\n  if (\n    element.extra?.maxClass &&\n    HullTypes.getHullValue(element.extra.maxClass) <\n      HullTypes.getHullValue(shipHull)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst mapStatetoProps = (state, ownProps) => {\n  return {\n    modules: Object.entries(getModuleData(state))\n      .map(([, element]) => element)\n      .filter((element) => hullSupportsElement(element, state.ship.hull.class)),\n    ...ownProps,\n  };\n};\n\nexport default connect(mapStatetoProps)(Modules);\n","import { connect } from \"react-redux\";\nimport HullType from \"../components/HullType\";\nimport { setHullType, removeSpikeDrive } from \"../actions\";\nimport { getDriveStats } from \"../selectors/drives\";\nimport { getModuleStats } from \"../selectors/modules\";\nimport { calcShipStats, calcValidShip } from \"../selectors\";\nimport { hullSupportsElement } from \"./Modules\";\n\nconst isSelectable = (hull, ship, modifier, drive, modules) => {\n  // If there's no selected hull, make all available.\n  if (!ship.hull) {\n    return true;\n  }\n\n  // Check if the ship has any modules that are incompatible.\n  for (const [, module] of Object.entries(modules)) {\n    if (!hullSupportsElement(module, hull.class)) {\n      return false;\n    }\n  }\n\n  // Check if any of the drives are incompatible\n  if (!hullSupportsElement(drive, hull.class)) {\n    return false;\n  }\n\n  // Check if any of the weapons are incompatible\n  for (const [, weapon] of Object.entries(ship.weapons)) {\n    if (!hullSupportsElement(weapon, hull.class)) {\n      return false;\n    }\n  }\n\n  let newStats = calcShipStats(hull, ship, modifier);\n  return calcValidShip(newStats, hull);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const drive = getDriveStats(state);\n  const modules = getModuleStats(state);\n  const modifier = state.costModifier;\n  return {\n    isSelectable: isSelectable(ownProps.data, state.ship, modifier, drive, modules),\n    active: state.ship.hull?.name === ownProps.data.name,\n    ...ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClick: (data) => {\n    if (data.type === \"station\") {\n      dispatch(removeSpikeDrive());\n    }\n    dispatch(setHullType(data));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HullType);\n","import React, { Component } from 'react';\nimport { Table, Row, Col } from 'reactstrap';\nimport HullType from '../containers/HullType';\n\nclass HullTypes extends Component {\n  static getHullValue (hullClass) {\n    if (hullClass === \"Fighter\") { return 0; }\n    else if (hullClass === \"Frigate\") { return 1; }\n    else if (hullClass === \"Cruiser\") { return 2; }\n    else if (hullClass === \"Capital\") { return 3; }\n  }\n\n  render() {\n    let rows = [];\n    this.props.hulls.forEach((element, index) => {\n      rows.push(\n        <HullType key={index}\n          data={element}\n        />\n      )\n    });\n\n    return (\n      <div>\n        <Row>\n          <Col sm=\"auto\">\n            <h3>Ship types</h3>\n          </Col>\n        </Row>\n        <Table className=\"centerTable\" striped size=\"sm\">\n          <thead>\n            <tr>\n              <th>Hull Type</th>\n              <th>Cost</th>\n              <th>Speed</th>\n              <th>Armor</th>\n              <th>HP</th>\n              <th>Crew</th>\n              <th>AC</th>\n              <th>Power</th>\n              <th>Mass</th>\n              <th>Hard.</th>\n              <th>Class</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default HullTypes;","import React, { Component } from \"react\";\r\nimport { Col, Row, Table } from \"reactstrap\";\r\nimport Ammo from \"../containers/Ammo\";\r\nimport HullTypes from \"./HullTypes\";\r\n\r\nclass Ammos extends Component {\r\n  static ammoCountDifference(hullClass, ammoClass) {\r\n    return (\r\n      HullTypes.getHullValue(hullClass) - HullTypes.getHullValue(ammoClass)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let rows = [];\r\n    this.props.ammos.forEach((element, index) => {\r\n      rows.push(\r\n        <Ammo key={index}\r\n          data={element}\r\n        />\r\n      );\r\n    });\r\n\r\n    return(\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"auto\">\r\n            <h3>Ammo</h3>\r\n          </Col>\r\n        </Row>\r\n        <Table className=\"centerTable\" striped size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Weapon name</th>\r\n              <th>Cost</th>\r\n              <th>Shots</th>\r\n              <th>Cost / shot</th>\r\n              <th>Mass</th>\r\n              <th>Dmg</th>\r\n              <th style={{width: \"10.0%\"}}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ammos;\r\n","import { createSelector } from \"reselect\";\r\nimport Modules from \"../components/Modules\";\r\nimport Ammos from \"../components/Ammos\";\r\n\r\nconst defensesData = require(\"../utils/data/defenses.json\");\r\n\r\nconst getHull = (state) => state.ship.hull;\r\nconst getModifier = (state) => state.costModifier;\r\nconst getDefenses = (state) => state.ship.defenses;\r\n\r\nexport const defensesDataByHull = (hull, modifier) => {\r\n  const defenses = {};\r\n  for (const [name, element] of Object.entries(defensesData)) {\r\n    defenses[name] = {\r\n      name: element.name,\r\n      cost:\r\n        Modules.moduleCostModifier(\r\n          hull.class,\r\n          element.costModifier,\r\n          element.cost\r\n        ) * modifier,\r\n      power: element.power,\r\n      mass: Modules.powerMassCostModifier(\r\n        hull.class,\r\n        element.massModifier,\r\n        element.mass\r\n      ),\r\n      minClass: element.minClass,\r\n      description: element.description,\r\n    };\r\n    if (element.changes) {\r\n      defenses[name].changes = element.changes;\r\n    }\r\n    if (element.qualities) {\r\n      defenses[name].qualities = { ...element.qualities };\r\n    }\r\n    if (element?.qualities?.type && element.qualities.type.includes(\"ammo\")) {\r\n      defenses[name].qualities.ammoCost = element.qualities.ammoCost * modifier;\r\n      defenses[name].qualities.ammo =\r\n        element.qualities.ammo *\r\n        (2 ** Ammos.ammoCountDifference(hull?.class, element.minClass));\r\n      defenses[name].qualities.totalAmmoCost =\r\n        defenses[name].qualities.ammoCost * defenses[name].qualities.ammo;\r\n    }\r\n  }\r\n  return defenses;\r\n};\r\n\r\nexport const getDefensesData = createSelector(\r\n  [getHull, getModifier],\r\n  (hull, modifier) => {\r\n    return defensesDataByHull(hull, modifier);\r\n  }\r\n);\r\n\r\nexport const getDefensesStats = createSelector(\r\n  [getDefenses, getDefensesData],\r\n  (defenses, defensesData) => {\r\n    const shipDefenses = {};\r\n    for (const [name, defense] of Object.entries(defenses)) {\r\n      shipDefenses[name] = {\r\n        ...defensesData[name],\r\n        count: defense.count,\r\n      };\r\n    }\r\n    return shipDefenses;\r\n  }\r\n);","import { createSelector } from \"reselect\";\nimport { getDefensesStats } from \"./defenses\";\nimport { changeFunction, getModuleStats } from \"./modules\";\n\nconst hullData = require(\"../utils/data/ships.json\");\n\nconst getModifier = (state) => state.costModifier;\nconst getDrive = (state) => state.ship.drive;\nconst getHull = (state) => state.ship.hull;\n\nexport const hullDataByDrive = (drive, modifier) => {\n  const driveModifier = drive?.name === \"System Drive\" ? 0.9 : 1;\n  const ships = {};\n  for (const [name, element] of Object.entries(hullData)) {\n    ships[name] = {\n      ...element,\n      cost: element.cost * modifier * driveModifier,\n    };\n  }\n  return ships;\n};\n\nexport const getHullData = createSelector(\n  [getModifier, getDrive],\n  (modifier, drive) => {\n    return hullDataByDrive(drive, modifier);\n  }\n);\n\nexport const getRawHullStats = createSelector(\n  [getHull, getHullData],\n  (hull, hullData) => {\n    return hullData[hull.name];\n  }\n)\n\nexport const getHullStats = createSelector(\n  [getHull, getHullData, getDefensesStats, getModuleStats],\n  (shipHull, hullData, defenses, modules) => {\n    const hull = {\n      ...hullData[shipHull.name]\n    };\n\n    // Add defenses\n    for (const [, defense] of Object.entries(defenses)) {\n      if (defense.changes) {\n        for (let change of defense.changes) {\n          hull[change.target] += change.amount;\n        }\n      }\n    }\n\n    // Add module modifications\n    for (const [, module] of Object.entries(modules)) {\n      if (module.changes) {\n        for (let change of module.changes) {\n          hull[change.target] = changeFunction(change.action)(\n            hull[change.target],\n            change.amount,\n            module.count\n          )\n        }\n      }\n    }\n\n    return hull;\n  }\n);\n","import { createSelector } from \"reselect\";\nimport Ammos from \"../components/Ammos\";\n\nconst rawWeaponData = require(\"../utils/data/weapons.json\");\n\nconst getHull = (state) => state.ship.hull;\nconst getModifier = (state) => state.costModifier;\nconst getWeapons = (state) => state.ship.weapons;\n\nexport const weaponDataByHull = (hull, modifier) => {\n  const weapons = {};\n  for (const [name, element] of Object.entries(rawWeaponData)) {\n    weapons[name] = {\n      ...element,\n      cost: element.cost * modifier,\n      qualities: {\n        ...element.qualities\n      },\n    };\n    if (element?.qualities?.type && element.qualities.type.includes(\"ammo\")) {\n      weapons[name].qualities.ammoCost = element.qualities.ammoCost * modifier;\n      weapons[name].qualities.ammo =\n        element.qualities.ammo *\n        (2 ** Ammos.ammoCountDifference(hull?.class, element.minClass));\n      weapons[name].qualities.totalAmmoCost =\n        weapons[name].qualities.ammoCost * weapons[name].qualities.ammo;\n    }\n  }\n  return weapons;\n};\n\nexport const getWeaponData = createSelector(\n  [getHull, getModifier],\n  (hull, modifier) => {\n  return weaponDataByHull(hull, modifier);\n});\n\nexport const getWeaponStats = createSelector(\n  [getWeapons, getWeaponData],\n  (weapons, data) => {\n    const shipWeapons = {};\n    for (const [name, module] of Object.entries(weapons)) {\n      shipWeapons[name] = {\n        ...data[name],\n        count: module.count,\n      };\n    }\n    return shipWeapons;\n  }\n);\n","import { createSelector } from \"reselect\";\nimport { moduleDataByHull } from \"./modules\";\nimport { driveDataByHull } from \"./drives\";\nimport { hullDataByDrive } from \"./hulls\";\nimport { weaponDataByHull } from \"./weapons\";\nimport { defensesDataByHull } from \"./defenses\";\n\nconst getModifier = (state) => state.costModifier;\nconst getShip = (state) => state.ship;\n\nexport const calcShipStats = (hull, ship, modifier) => {\n  // Just return if there's no hull yet\n  if (hull?.name === undefined) {\n    return {};\n  }\n\n  // Get hull data\n  const hullData = hullDataByDrive(ship.drive, modifier);\n  const stats = hullData[hull.name];\n\n  // Check modules\n  const modules = moduleDataByHull(hull, modifier);\n  for (let moduleName in ship.modules) {\n    stats.cost += modules[moduleName].cost * ship.modules[moduleName].count;\n    stats.power -= modules[moduleName].power * ship.modules[moduleName].count;\n    stats.mass -= modules[moduleName].mass * ship.modules[moduleName].count;\n  }\n\n  // Check weapons\n  const weapons = weaponDataByHull(hull, modifier);\n  for (let weaponName in ship.weapons) {\n    stats.cost += weapons[weaponName].cost * ship.weapons[weaponName].count;\n    stats.power -= weapons[weaponName].power * ship.weapons[weaponName].count;\n    stats.mass -= weapons[weaponName].mass * ship.weapons[weaponName].count;\n    stats.hardpoints -=\n      weapons[weaponName].hardpoints * ship.weapons[weaponName].count;\n  }\n\n  // Check drive\n  if (\n    !(\n      Object.entries(ship.drive).length === 0 &&\n      ship.drive.constructor === Object\n    )\n  ) {\n    let drives = driveDataByHull(hull, modifier);\n    stats.cost += drives[ship.drive.name].cost;\n    stats.power -= drives[ship.drive.name].power;\n    stats.mass -= drives[ship.drive.name].mass;\n  }\n\n  // Check defenses\n  const defenses = defensesDataByHull(hull, modifier);\n  for (const defenseName in ship.defenses) {\n    stats.cost += defenses[defenseName].cost * ship.defenses[defenseName].count;\n    stats.power -=\n      defenses[defenseName].power * ship.defenses[defenseName].count;\n    stats.mass -= defenses[defenseName].mass * ship.defenses[defenseName].count;\n    let changes = defenses[defenseName].changes;\n    if (changes) {\n      for (const change of changes) {\n        stats[change.target] += change.amount;\n      }\n    }\n  }\n\n  // Check ammo\n  const ammoConsumers = { ...weapons, ...defenses };\n  for (let ammoName in ship.ammo) {\n    stats.cost +=\n      ammoConsumers[ammoName].qualities.totalAmmoCost *\n      ship.ammo[ammoName].count;\n    stats.mass -= ship.ammo[ammoName].count;\n  }\n\n  return stats;\n};\n\nexport const calcValidShip = (stats, hull) => {\n  if (stats.power < 0 || stats.mass < 0 || stats.hardpoints < 0) {\n    return false;\n  }\n  return true;\n};\n\nexport const getShipStats = createSelector(\n  // TODO: Just pass in all the different component stats instead of doing it redundantly\n  [getShip, getModifier],\n  (ship, modifier) => {\n    return calcShipStats(ship.hull, ship, modifier);\n  }\n);\n","import { connect } from 'react-redux';\nimport SmallShipDisplay from '../components/SmallShipDisplay';\nimport { getShipStats } from '../selectors';\n\nconst mapStateToProps = state => ({\n  hull: state.ship.hull,\n  modules: state.ship.modules,\n  weapons: state.ship.weapons,\n  defenses: state.ship.defenses,\n  stats: getShipStats(state),\n});\n\nexport default connect(mapStateToProps)(SmallShipDisplay);","import { connect } from \"react-redux\";\nimport HullTypes from \"../components/HullTypes\";\nimport { getHullData } from \"../selectors/hulls\";\n\nconst mapStatetoProps = (state, ownProps) => {\n  return {\n    hulls: Object.entries(getHullData(state)).map(([, hull]) => hull),\n    ...ownProps,\n  };\n};\n\nexport default connect(mapStatetoProps)(HullTypes);\n","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport formatCost from '../utils/formatCost';\n\nclass Drive extends Component {\n  constructor() {\n    super();\n    this.selectDrive = this.selectDrive.bind(this);\n  }\n\n  selectDrive() {\n    if (!this.props.active) {\n      let data = {\n        name: this.props.data.name,\n      };\n      this.props.onSelect(data);\n    } else {\n      this.props.onDeselect();\n    }\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.data.name}</td>\n        <td style={{textAlign: \"right\"}}>{formatCost(this.props.data.cost)}</td>\n        <td>{this.props.data.power}</td>\n        <td>{this.props.data.mass}</td>\n        <td>{this.props.data.description}</td>\n        <td>\n          <Button\n            outline\n            disabled={!this.props.active && !this.props.isSelectable}\n            color=\"primary\"\n            size=\"sm\"\n            onClick={() => this.selectDrive()}\n            active={this.props.active}\n            style={{width: \"100%\"}}>\n            Select\n          </Button>\n        </td>\n      </tr>\n    )\n  }\n}\n\nDrive.propTypes = {\n  active: PropTypes.bool.isRequired,\n  isSelectable: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    cost: PropTypes.number.isRequired,\n    power: PropTypes.number.isRequired,\n    mass: PropTypes.number.isRequired,\n    minClass: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onDeselect: PropTypes.func.isRequired,\n}\n\nexport default Drive","import { connect } from \"react-redux\";\nimport Drive from \"../components/Drive\";\nimport { setSpikeDrive, removeSpikeDrive } from \"../actions\";\nimport { getShipStats } from \"../selectors\";\nimport { getDriveStats } from \"../selectors/drives\";\n\nconst isSelectable = (stats, oldDrive, newDrive) => {\n  if (\n    stats.power + oldDrive.power - newDrive.power < 0 ||\n    stats.mass + oldDrive.mass - newDrive.mass < 0\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst mapStatetoProps = (state, ownProps) => {\n  let stats = getShipStats(state);\n  let driveStats = getDriveStats(state);\n  let active = ownProps.data.name === state.ship.drive.name;\n  return {\n    active: active,\n    isSelectable: isSelectable(stats, driveStats, ownProps.data),\n    ...ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSelect: (data) => dispatch(setSpikeDrive(data)),\n  onDeselect: () => dispatch(removeSpikeDrive()),\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Drive);\n","import React, { Component } from 'react';\nimport { Table, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Drive from '../containers/Drive';\n\nclass Drives extends Component {\n  render() {\n    let rows = [];\n    if (this.props.speed !== null) {\n        // We don't want to show drives for space stations\n        this.props.drives.forEach((element, index) => {\n          rows.push(\n            <Drive\n              key={index}\n              data={element}\n            />\n          );\n        });\n    }\n\n    return(\n      <div>\n        <Row>\n          <Col sm=\"auto\">\n            <h3>Drives</h3>\n          </Col>\n        </Row>\n        <Table className=\"centerTable\" striped size=\"sm\">\n          <thead>\n            <tr>\n              <th style={{width: \"21.03%\"}}>Ship Drive</th>\n              <th style={{width: \"9.68%\"}}>Cost</th>\n              <th style={{width: \"11.47%\"}}>Power</th>\n              <th style={{width: \"9.88%\"}}>Mass</th>\n              <th style={{width: \"39.56%\"}}>Description</th>\n              <th style={{width: \"8.33%\"}}></th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nDrives.propTypes = {\n  speed: PropTypes.number,\n  drives: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      cost: PropTypes.number.isRequired,\n      power: PropTypes.number.isRequired,\n      mass: PropTypes.number.isRequired,\n      minClass: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n}\n\nexport default Drives","import { connect } from \"react-redux\";\nimport Drives from \"../components/Drives\";\nimport { getShipStats } from \"../selectors\";\nimport { getDriveData } from \"../selectors/drives\";\nimport { hullSupportsElement } from \"./Modules\";\n\nconst mapStatetoProps = (state, ownProps) => {\n  return {\n    speed: getShipStats(state).speed,\n    drives: Object.entries(getDriveData(state))\n      .map(([, element]) => element)\n      .filter(\n        (drive) =>\n          hullSupportsElement(drive, state.ship.hull.class) &&\n          state.ship.hull.type !== \"station\"\n      ),\n    ...ownProps,\n  };\n};\n\nexport default connect(mapStatetoProps)(Drives);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatCost from '../utils/formatCost';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\nclass Weapon extends Component {\n  constructor() {\n    super();\n    this.weaponChanged = this.weaponChanged.bind(this);\n  }\n\n  weaponChanged(count) {\n    const data = {\n      name: this.props.data.name,\n    }\n    if (count > this.props.value && this.props.canIncrease) {\n      this.props.onIncrease(data);\n    } else if (count < this.props.value) {\n      this.props.onDecrease(data);\n    }\n  }\n\n  render() {\n    let input = (\n      <div>\n        {this.props.value}\n        <AddCircleIcon\n          color={this.props.canIncrease ? \"primary\" : \"disabled\"}\n          onClick={() => {this.weaponChanged(this.props.value + 1)}}\n        />\n        <RemoveCircleIcon\n          color={this.props.value > 0 ? \"primary\" : \"disabled\"}\n          onClick={() => {this.weaponChanged(this.props.value - 1)}}\n        />\n      </div>\n    )\n\n    let qualities = \"\";\n    let length = this.props.data.qualities.type.length;\n    this.props.data.qualities.type.forEach((type, index) => {\n      if (type === \"ap\") {\n        qualities += `AP ${this.props.data.qualities.ap}`;\n      }\n      else if (type === \"ammo\") {\n        qualities += `Ammo ${this.props.data.qualities.ammo}`;\n      }\n      else {\n        qualities += type;\n      }\n\n      if (index !== length-1) {\n        qualities += \", \";\n      }\n    });\n\n    let cost = `${formatCost(this.props.data.cost)}`;\n    if (this.props.data.qualities.type.includes(\"ammo\")) {\n      cost += ` / ${formatCost(this.props.data.qualities.ammoCost)}`;\n    }\n\n    return (\n      <tr>\n        <td>{this.props.data.name}</td>\n        <td style={{textAlign: \"right\"}}>{cost}</td>\n        <td>{this.props.data.damage}</td>\n        <td>{this.props.data.power}</td>\n        <td>{this.props.data.mass}</td>\n        <td>{this.props.data.hardpoints}</td>\n        <td>{this.props.data.techLevel}</td>\n        <td>{qualities}</td>\n        <td>{input}</td>\n      </tr>\n    )\n  }\n}\n\nWeapon.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    cost: PropTypes.number.isRequired,\n    damage: PropTypes.string.isRequired,\n    power: PropTypes.number.isRequired,\n    mass: PropTypes.number.isRequired,\n    hardpoints: PropTypes.number.isRequired,\n    minClass: PropTypes.string.isRequired,\n    techLevel: PropTypes.number.isRequired,\n    qualities: PropTypes.shape({\n      type: PropTypes.arrayOf(PropTypes.string.isRequired),\n      ap: PropTypes.number,\n      ammo: PropTypes.number,\n      ammoCost: PropTypes.number,\n    }).isRequired,\n  }).isRequired,\n  value: PropTypes.number.isRequired,\n  canIncrease: PropTypes.bool.isRequired,\n  onIncrease: PropTypes.func.isRequired,\n  onDecrease: PropTypes.func.isRequired,\n}\n\nexport default Weapon","import { connect } from \"react-redux\";\nimport Weapon from \"../components/Weapon\";\nimport { addWeapon, removeWeapon } from \"../actions\";\nimport { getShipStats } from \"../selectors\";\n\nconst canAddWeapon = (stats, weapon) => {\n  if (\n    stats.power - weapon.power < 0 ||\n    stats.mass - weapon.mass < 0 ||\n    stats.hardpoints - weapon.hardpoints < 0\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst mapStatetoProps = (state, ownProps) => {\n  const stats = getShipStats(state);\n  let value = 0;\n  if (state.ship.weapons[ownProps.data.name]) {\n    value = state.ship.weapons[ownProps.data.name].count;\n  }\n  return {\n    value: value,\n    canIncrease: canAddWeapon(stats, ownProps.data),\n    ...ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onIncrease: (data) => dispatch(addWeapon(data)),\n  onDecrease: (data) => dispatch(removeWeapon(data)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Weapon);\n","import React, { Component } from 'react';\nimport { Table, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Weapon from '../containers/Weapon';\n\nclass Weapons extends Component {\n  render() {\n    let rows = [];\n    this.props.weapons.forEach((element, index) => {\n      rows.push(\n        <Weapon key={index}\n          data={element}\n        />\n      );\n    });\n\n    return(\n      <div>\n        <Row>\n          <Col sm=\"auto\">\n            <h3>Weapons</h3>\n          </Col>\n        </Row>\n        <Table className=\"centerTable\" striped size=\"sm\">\n          <thead>\n            <tr>\n              <th style={{width: \"22.32%\"}}>Ship Weapon</th>\n              <th style={{width: \"11.01%\"}}>Cost</th>\n              <th style={{width: \"9.17%\"}}>Dmg</th>\n              <th style={{width: \"7.3%\"}}>Power</th>\n              <th style={{width: \"6.15%\"}}>Mass</th>\n              <th style={{width: \"6.92%\"}}>Hard.</th>\n              <th style={{width: \"3.27%\"}}>TL</th>\n              <th style={{width: \"22.13%\"}}>qualities</th>\n              <th style={{width: \"12.33%\"}}></th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nWeapons.propTypes = {\n  weapons: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      cost: PropTypes.number.isRequired,\n      damage: PropTypes.string.isRequired,\n      power: PropTypes.number.isRequired,\n      mass: PropTypes.number.isRequired,\n      hardpoints: PropTypes.number.isRequired,\n      minClass: PropTypes.string.isRequired,\n      techLevel: PropTypes.number.isRequired,\n      qualities: PropTypes.shape({\n        type: PropTypes.arrayOf(PropTypes.string.isRequired),\n        ap: PropTypes.number,\n        ammo: PropTypes.number,\n        ammoCost: PropTypes.number,\n      }).isRequired,\n    })\n  ).isRequired,\n}\n\nexport default Weapons","import { connect } from \"react-redux\";\nimport Weapons from \"../components/Weapons\";\nimport { getWeaponData } from \"../selectors/weapons\";\nimport { hullSupportsElement } from \"./Modules\";\n\nconst mapStatetoProps = (state, ownProps) => {\n  return {\n    weapons: Object.entries(getWeaponData(state))\n      .map(([, weapon]) => weapon)\n      .filter((weapon) => hullSupportsElement(weapon, state.ship.hull.class)),\n    ...ownProps,\n  };\n};\n\nexport default connect(mapStatetoProps)(Weapons);\n","import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass SidePanel extends Component {\n  render() {\n    return (\n      <div>\n        <Table bordered className=\"side-table\" size=\"sm\">\n          <thead>\n            <tr>\n              <th colSpan=\"2\">Remaining points</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td style={{textAlign: \"right\"}} sm={8}>Hulltype:</td>\n              <td sm={4}>{this.props.hullType}</td>\n            </tr>\n            <tr>\n              <td style={{textAlign: \"right\"}} sm={8}>Mass:</td>\n              <td sm={4}>{this.props.stats.mass}</td>\n            </tr>\n            <tr>\n              <td style={{textAlign: \"right\"}} sm={8}>Power:</td>\n              <td sm={4}>{this.props.stats.power}</td>\n            </tr>\n            <tr>\n              <td style={{textAlign: \"right\"}} sm={8}>Hardpoints:</td>\n              <td sm={4}>{this.props.stats.hardpoints}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nSidePanel.propType = {\n  hullType: PropTypes.string.isRequired,\n  mass: PropTypes.number.isRequired,\n  power: PropTypes.number.isRequired,\n  hardpoints: PropTypes.number.isRequired\n}\n\nexport default SidePanel","import { connect } from 'react-redux';\nimport SidePanel from '../components/SidePanel';\nimport { getShipStats } from '../selectors';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    hullType: state.ship.hull.class,\n    stats: getShipStats(state),\n    ...ownProps\n  }\n};\n\nexport default connect(mapStateToProps)(SidePanel)","import { Component } from \"react\";\nimport { Button, Row, Col, Input } from \"reactstrap\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport PropTypes from 'prop-types';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Options extends Component {\n  clear = () => {\n    confirmAlert({\n      title: \"Confirm to clear\",\n      message: \"This will reset the entire page.\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => this.props.clearAll(),\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  export = () => {\n    const exportState = this.props.state;\n    delete exportState[\"_persist\"];\n    const exportString =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(exportState));\n\n    const dlAnchorElem = document.getElementById(\"downloadAnchorElement\");\n    dlAnchorElem.setAttribute(\"href\", exportString);\n    dlAnchorElem.setAttribute(\"download\", this.props.state.name + \"_ship.json\");\n    dlAnchorElem.click();\n  };\n\n  triggerImport = () => {\n    const uploadAnchorElement = document.getElementById(\"uploadAnchorElement\");\n    uploadAnchorElement.click();\n  }\n\n  importData = async (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const content = e.target.result;\n      const data = JSON.parse(content);\n      this.props.onImport(data);\n    };\n    if (e.target.files[0]) {\n      reader.readAsText(e.target.files[0]);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs=\"auto\">\n            <Button color=\"primary\" onClick={this.export}>\n              Save\n            </Button>\n            <a href=\".\" id=\"downloadAnchorElement\" style={{display: \"none\"}}>\n              Hidden download button\n            </a>\n          </Col>\n          <Col xs=\"auto\">\n            <Button\n              color=\"primary\"\n              onClick={this.triggerImport}\n            >\n              Load\n            </Button>\n            <Input\n              type=\"file\"\n              id=\"uploadAnchorElement\"\n              style={{display: \"none\"}}\n              onChange={this.importData}\n            />\n          </Col>\n          <Col xs=\"auto\">\n            <Button color=\"primary\" onClick={this.clear}>\n              Clear\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Options;\n\nOptions.propType = {\n  state: PropTypes.object.isRequired,\n  onExport: PropTypes.func.isRequired,\n  onImport: PropTypes.func.isRequired,\n  clearAll: PropTypes.func.isRequired,\n}","import { connect } from 'react-redux';\nimport Options from '../components/Options';\nimport { exportShip, importShip, clear } from '../actions';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state: state,\n    ...ownProps\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onExport: () => dispatch(exportShip()),\n  onImport: (state) => dispatch(importShip(state)),\n  clearAll: () => dispatch(clear()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options)","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatCost from \"../utils/formatCost\";\r\nimport { Button } from 'reactstrap';\r\n\r\nclass Defense extends Component {\r\n  constructor() {\r\n    super();\r\n    this.selectDefense = this.selectDefense.bind(this);\r\n  }\r\n  \r\n  selectDefense() {\r\n    const data = {\r\n      name: this.props.data.name,\r\n    };\r\n    if (!this.props.active && this.props.isSelectable) {\r\n      this.props.onIncrease(data);\r\n    } else if (this.props.active) {\r\n      this.props.onDecrease(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let cost = `${formatCost(this.props.data.cost)}`;\r\n    if (\r\n      this.props.data?.qualities?.type &&\r\n      this.props.data?.qualities?.type.includes(\"ammo\")\r\n    ) {\r\n      cost += ` / ${formatCost(this.props.data.qualities.ammoCost)}`;\r\n    }\r\n\r\n    return (\r\n      <tr>\r\n        <td>{this.props.data.name}</td>\r\n        <td style={{textAlign: \"right\"}}>{cost}</td>\r\n        <td>{this.props.data.power}</td>\r\n        <td>{this.props.data.mass}</td>\r\n        <td>{this.props.data.description}</td>\r\n        <td>\r\n          <Button\r\n            outline\r\n            disabled={!this.props.active && !this.props.isSelectable}\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            onClick={this.selectDefense}\r\n            active={this.props.active}\r\n            style={{width: \"100%\"}}>\r\n            Select\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nDefense.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    cost: PropTypes.number.isRequired,\r\n    power: PropTypes.number.isRequired,\r\n    mass: PropTypes.number.isRequired,\r\n    minClass: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    extra: PropTypes.shape({\r\n      max: PropTypes.number,\r\n    }),\r\n    qualities: PropTypes.shape({\r\n      type: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n      ammo: PropTypes.number,\r\n      ammoCost: PropTypes.number,\r\n    }),\r\n  }).isRequired,\r\n  active: PropTypes.bool.isRequired,\r\n  isSelectable: PropTypes.bool.isRequired,\r\n  onIncrease: PropTypes.func.isRequired,\r\n  onDecrease: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Defense;\r\n","import { connect } from \"react-redux\";\r\nimport Defense from \"../components/Defense\";\r\nimport { addDefense, removeDefense } from \"../actions\";\r\nimport { getShipStats } from \"../selectors\";\r\n\r\nconst isSelectable = (stats, defense) => {\r\n  if (\r\n    stats.power - defense.power < 0 ||\r\n    stats.mass - defense.mass < 0 ||\r\n    stats.hardpoints - defense.hardpoints < 0\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  const stats = getShipStats(state);\r\n  let active = (ownProps.data.name in state.ship.defenses);\r\n  return {\r\n    active: active,\r\n    isSelectable: isSelectable(stats, ownProps.data),\r\n    ...ownProps,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onIncrease: (data) => dispatch(addDefense(data)),\r\n  onDecrease: (data) => dispatch(removeDefense(data)),\r\n});\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Defense);\r\n","import React, { Component } from 'react';\r\nimport { Table, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Defense from '../containers/Defense';\r\n\r\nclass Defenses extends Component {\r\n  render() {\r\n    let rows = [];\r\n    this.props.defenses.forEach((element, index) => {\r\n      rows.push(\r\n        <Defense key={index}\r\n          data={element}\r\n        />\r\n      );\r\n    });\r\n\r\n    return(\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"auto\">\r\n            <h3>Defenses</h3>\r\n          </Col>\r\n        </Row>\r\n        <Table className=\"centerTable\" striped size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th style={{width: \"20.32%\"}}>Ship Defense</th>\r\n              <th style={{width: \"11.01%\"}}>Cost</th>\r\n              <th style={{width: \"6.3%\"}}>Power</th>\r\n              <th style={{width: \"5.15%\"}}>Mass</th>\r\n              <th style={{width: \"30.13%\"}}>Effect</th>\r\n              <th style={{width: \"6.33%\"}}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDefenses.propTypes = {\r\n  defenses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      cost: PropTypes.number.isRequired,\r\n      power: PropTypes.number.isRequired,\r\n      mass: PropTypes.number.isRequired,\r\n      minClass: PropTypes.string.isRequired,\r\n      description: PropTypes.string.isRequired,\r\n      extra: PropTypes.shape({\r\n        max: PropTypes.number,\r\n      }),\r\n      qualities: PropTypes.shape({\r\n        type: PropTypes.arrayOf(\r\n          PropTypes.string.isRequired,\r\n        ),\r\n        ammo: PropTypes.number,\r\n        ammoCost: PropTypes.number,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n}\r\n\r\nexport default Defenses","import { connect } from \"react-redux\";\r\nimport Defenses from \"../components/Defenses\";\r\nimport { getDefensesData } from \"../selectors/defenses\";\r\nimport { hullSupportsElement } from \"./Modules\";\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  return {\r\n    defenses: Object.entries(getDefensesData(state))\r\n      .map(([, defense]) => defense)\r\n      .filter((defense) => hullSupportsElement(defense, state.ship.hull.class)),\r\n    ...ownProps,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps)(Defenses);\r\n","import { connect } from \"react-redux\";\r\nimport Ammos from \"../components/Ammos\";\r\nimport { getDefensesStats } from \"../selectors/defenses\";\r\nimport { getWeaponStats } from \"../selectors/weapons\";\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  const weapons = Object.entries(getWeaponStats(state))\r\n    .map(([, weapon]) => weapon)\r\n    .filter((weapon) => weapon.qualities.type.includes(\"ammo\"));\r\n  const defenses = Object.entries(getDefensesStats(state))\r\n    .map(([, defense]) => defense)\r\n    .filter((defense) => defense?.qualities?.type && defense.qualities.type.includes(\"ammo\"));\r\n  return {\r\n    ammos: [...weapons, ...defenses],\r\n    ...ownProps,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps)(Ammos);\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Table, Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport formatCost from '../utils/formatCost';\r\n\r\nclass ShipDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: false};\r\n  }\r\n\r\n  render() {\r\n    const toggle = () => this.setState({show: !this.state.show});\r\n\r\n    const weapons = []\r\n    for (const [name, weapon] of Object.entries(this.props.weapons)) {\r\n      let qualities = \"\";\r\n      let length = weapon.qualities.type.length;\r\n      weapon.qualities.type.forEach((type, index) => {\r\n        if (type === \"ap\") {\r\n          qualities += `AP ${weapon.qualities.ap}`;\r\n        }\r\n        else if (type === \"ammo\") {\r\n          qualities += `Ammo ${weapon.qualities.ammo}`;\r\n        }\r\n        else {\r\n          qualities += type;\r\n        }\r\n\r\n        if (index !== length-1) {\r\n          qualities += \", \";\r\n        }\r\n      });\r\n\r\n      let cost = `${formatCost(weapon.cost * weapon.count)}`;\r\n      if (weapon.qualities.type.includes(\"ammo\")) {\r\n        cost += ` / ${formatCost(weapon.qualities.ammoCost)}`;\r\n      }\r\n\r\n      weapons.push(\r\n        <tr key={name}>\r\n          <td>{weapon.count}</td>\r\n          <td>{weapon.name}</td>\r\n          <td>{formatCost(cost)}</td>\r\n          <td>{weapon.damage}</td>\r\n          <td>{qualities}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    const defenses = []\r\n    for (const [name, defense] of Object.entries(this.props.defenses)) {\r\n      let cost = `${formatCost(defense.cost)}`;\r\n      if (\r\n        defense?.qualities?.type &&\r\n        defense?.qualities?.type.includes(\"ammo\")\r\n      ) {\r\n        cost += ` / ${formatCost(defense.qualities.ammoCost * defense.count)}`;\r\n      }\r\n\r\n      defenses.push(\r\n        <tr key={name}>\r\n          <td>{defense.count}</td>\r\n          <td>{defense.name}</td>\r\n          <td>{cost}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    const modules = []\r\n    for (const [name, module] of Object.entries(this.props.modules)) {\r\n      modules.push(\r\n        <tr key={name}>\r\n          <td>{module.count}</td>\r\n          <td>{module.name}</td>\r\n          <td>{formatCost(module.cost * module.count)}</td>\r\n        </tr>\r\n      )\r\n    }\r\n\r\n    const ammo = []\r\n    for (const [name, ammoData] of Object.entries(this.props.ammo)) {\r\n      ammo.push(\r\n        <tr key={name}>\r\n          <td>{ammoData.ammo * ammoData.count}</td>\r\n          <td>{ammoData.name}</td>\r\n          <td>{formatCost(ammoData.totalAmmoCost * ammoData.count)}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={toggle}>\r\n          Show ship stats\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.show} toggle={toggle} size=\"lg\" style={{maxWidth: \"1000px\"}}>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Ship Name</td>\r\n                        <td>{this.props.name}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Hull Type</td>\r\n                        <td>{this.props.hull.name}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Engine Type</td>\r\n                        <td>{this.props.drive.name}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Class</td>\r\n                        <td>{this.props.hull.class}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Cost</td>\r\n                        <td>{formatCost(this.props.stats.cost)}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Maintenance</td>\r\n                        <td>{formatCost(this.props.stats.cost / 20)} / 6mo</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Stats</th>\r\n                        <th>Hull</th>\r\n                        <th>Actual</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>hardpoints</td>\r\n                        <td>{this.props.rawHull.hardpoints}</td>\r\n                        <td>{this.props.stats.hardpoints}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Mass</td>\r\n                        <td>{this.props.rawHull.mass}</td>\r\n                        <td>{this.props.stats.mass}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Power</td>\r\n                        <td>{this.props.rawHull.power}</td>\r\n                        <td>{this.props.stats.power}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Armor Class</td>\r\n                        <td>{this.props.rawHull.ac}</td>\r\n                        <td>{this.props.stats.ac}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Min. Crew</td>\r\n                        <td>{this.props.rawHull.minCrew}</td>\r\n                        <td>{this.props.hull.minCrew}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Max Crew</td>\r\n                        <td>{this.props.rawHull.maxCrew}</td>\r\n                        <td>{this.props.hull.maxCrew}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Hit Points</td>\r\n                        <td>{this.props.rawHull.hp}</td>\r\n                        <td>{this.props.hull.hp}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Armor</td>\r\n                        <td>{this.props.rawHull.armor}</td>\r\n                        <td>{this.props.hull.armor}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Speed</td>\r\n                        <td>{this.props.rawHull.speed}</td>\r\n                        <td>{this.props.hull.speed}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Cargo Space</td>\r\n                        <td>{this.props.cargo.cargoSpace}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Hidden Cargo</td>\r\n                        <td>{this.props.cargo.hiddenCargoSpace}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Weapons</th>\r\n                        <th>Cost</th>\r\n                        <th>Dmg</th>\r\n                        <th>Qualities</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {weapons}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Defenses</th>\r\n                        <th>Cost</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {defenses}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Fittings</th>\r\n                        <th>Cost</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {modules}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n                <Row className=\"non-padded-table\">\r\n                  <Table className=\"centerTable\" bordered size=\"sm\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Ammo</th>\r\n                        <th>Cost</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ammo}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShipDisplay\r\n\r\nShipDisplay.propTypes = {\r\n  name: PropTypes.string,\r\n  rawHull: PropTypes.object.isRequired,\r\n  hull: PropTypes.object.isRequired,\r\n  cargo: PropTypes.object.isRequired,\r\n  drive: PropTypes.object.isRequired,\r\n  modules: PropTypes.object.isRequired,\r\n  weapons: PropTypes.object.isRequired,\r\n  defenses: PropTypes.object.isRequired,\r\n  ammo: PropTypes.object.isRequired,\r\n  stats: PropTypes.object.isRequired,\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { getModuleStats } from \"./modules\";\r\n\r\nconst getHull = (state) => state.ship.hull;\r\n\r\nexport const getCargo = createSelector(\r\n  [getModuleStats, getHull],\r\n  (modules, hull) => {\r\n    let hullModifier = 1;\r\n    switch (hull.class) {\r\n      case \"Fighter\":\r\n        hullModifier = 1;\r\n        break;\r\n      case \"Frigate\":\r\n        hullModifier = 10;\r\n        break;\r\n      case \"Cruiser\":\r\n        hullModifier = 100;\r\n        break;\r\n      case \"Capital\":\r\n        hullModifier = 1000;\r\n        break;\r\n      default:\r\n        hullModifier = 1;\r\n        break;\r\n    }\r\n\r\n    let cargoSpace = 0;\r\n    if (\"Cargo space\" in modules) {\r\n      cargoSpace = 2 * modules[\"Cargo space\"].count * hullModifier;\r\n    }\r\n\r\n    let hiddenCargoSpace = 0;\r\n    if (\"Smuggler's Hold\" in modules) {\r\n      hiddenCargoSpace = 0.2 * modules[\"Smuggler's Hold\"].count * hullModifier;\r\n    }\r\n\r\n    return {\r\n      cargoSpace,\r\n      hiddenCargoSpace,\r\n    }\r\n  }\r\n)","import { getWeaponStats } from \"./weapons\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nconst getAmmo = (state) => state.ship.ammo;\r\n\r\nexport const getAmmoStats = createSelector(\r\n  [getWeaponStats, getAmmo],\r\n  (weapons, ammo) => {\r\n    const shipAmmo = {};\r\n    for (const [name, module] of Object.entries(ammo)) {\r\n      shipAmmo[name] = {\r\n        ...weapons[name].qualities,\r\n        count: module.count,\r\n      };\r\n    }\r\n    return shipAmmo;\r\n  }\r\n)","import { connect } from 'react-redux';\r\nimport ShipDisplay from '../components/ShipDisplay';\r\nimport { getShipStats } from '../selectors';\r\nimport { getDefensesStats } from '../selectors/defenses';\r\nimport { getHullStats, getRawHullStats } from '../selectors/hulls';\r\nimport { getModuleStats } from '../selectors/modules';\r\nimport { getWeaponStats } from '../selectors/weapons';\r\nimport { getDriveStats } from '../selectors/drives';\r\nimport { getCargo } from '../selectors/cargo';\r\nimport { getAmmoStats } from '../selectors/ammo';\r\n\r\nconst mapStateToProps = state => ({\r\n  name: state.name,\r\n  rawHull: getRawHullStats(state),\r\n  hull: getHullStats(state),\r\n  cargo: getCargo(state),\r\n  drive: getDriveStats(state),\r\n  modules: getModuleStats(state),\r\n  weapons: getWeaponStats(state),\r\n  defenses: getDefensesStats(state),\r\n  ammo: getAmmoStats(state),\r\n  stats: getShipStats(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ShipDisplay);","import { Form, Container, Row, Col } from 'reactstrap';\nimport React, { Component } from 'react';\nimport '../utils/App.css';\nimport GeneralSettings from '../containers/GeneralSettings';\nimport SmallShipDisplay from '../containers/SmallShipDisplay';\nimport HullTypes from '../containers/HullTypes';\nimport Drives from '../containers/Drives';\nimport Modules from '../containers/Modules';\nimport Weapons from '../containers/Weapons';\nimport SidePanel from '../containers/SidePanel';\nimport Options from '../containers/Options';\nimport Defenses from '../containers/Defenses';\nimport Ammos from '../containers/Ammos';\nimport ShipDisplay from '../containers/ShipDisplay';\n\nclass App extends Component {\n  render() {\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col sm=\"auto\">\n          <Container fluid={true} style={{minWidth: \"1000px\"}} >\n            <Form>\n              <GeneralSettings />\n              <HullTypes />\n              <Drives />\n              <Modules />\n              <Weapons />\n              <Defenses />\n              <Ammos />\n              <SmallShipDisplay />\n            </Form>\n          </Container>\n        </Col>\n        <Col sm=\"2\">\n          <Row className=\"sticky\">\n            <Col>\n              <Row>\n                <SidePanel />\n              </Row>\n              <Row style={{marginBottom: \"1rem\"}}>\n                <Options />\n              </Row>\n              <Row style={{marginBottom: \"1rem\"}}>\n                <ShipDisplay />\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default App","const costModifier = (state = 1, action) => {\n  switch (action.type) {\n    case 'SET_COST_MODIFIER':\n      return action.modifier;\n    default:\n      return state;\n  }\n}\n\nexport default costModifier","const hull = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_HULL_TYPE': {\n      return action.hullData;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default hull;\n","const drive = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_DRIVE': {\n      return action.driveData;\n    }\n    case 'REMOVE_DRIVE': {\n      return {};\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default drive;\n","import { addItem, removeItem } from \".\";\n\nconst modules = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_MODULE': {\n      return addItem(state, action.moduleData);\n    }\n    case 'REMOVE_MODULE': {\n      return removeItem(state, action.moduleData);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default modules;\n","import { addItem, removeItem } from \".\";\n\nconst weapons = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_WEAPON': {\n      return addItem(state, action.weaponData);\n    }\n    case 'REMOVE_WEAPON': {\n      return removeItem(state, action.weaponData);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default weapons;\n","import { addItem, removeItem } from \".\";\r\n\r\nconst defenses = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_DEFENSE': {\r\n      return addItem(state, action.defenseData);\r\n    }\r\n    case 'REMOVE_DEFENSE': {\r\n      return removeItem(state, action.defenseData);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default defenses;\r\n","import { addItem, removeItem } from \".\";\r\n\r\nconst ammo = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_AMMO': {\r\n      return addItem(state, action.ammoData);\r\n    }\r\n    case 'REMOVE_AMMO': {\r\n      return removeItem(state, action.ammoData);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ammo;\r\n","import { combineReducers } from 'redux';\nimport hull from \"./hull\";\nimport drive from \"./drive\";\nimport modules from \"./modules\";\nimport weapons from \"./weapons\";\nimport defenses from \"./defenses\";\nimport ammo from \"./ammo\";\n\nexport default combineReducers({\n  hull,\n  drive,\n  modules,\n  weapons,\n  defenses,\n  ammo,\n});\n\nexport const addItem = (state, itemData) => {\n  if (state[itemData.name]) {\n    // If the module already is in there\n    return {\n      ...state,\n      [itemData.name]: {\n        ...state[itemData.name],\n        count: state[itemData.name].count + 1\n      },\n    };\n  } else {\n    // Otherwise, add a new module\n    return {\n      ...state,\n      [itemData.name]: {\n        ...itemData,\n        count: 1,\n      },\n    };\n  }\n}\n\nexport const removeItem = (state, itemData) => {\n  if (state[itemData.name]?.count > 1) {\n    // If there's more than one left, just decrease the count\n    return {\n      ...state,\n      [itemData.name]: {\n        ...state[itemData.name],\n        count: state[itemData.name].count - 1\n      },\n    };\n  } else {\n    // If there's only one left, remove it\n    const { [itemData.name]: value, ...newItem } = state;\n    return newItem;\n  }\n}\n","const name = (state = \"\", action) => {\n  switch (action.type) {\n    case 'SET_NAME': {\n      return action.name;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default name;","import { combineReducers } from 'redux';\nimport costModifier from './costModifier';\nimport ship from './ship';\nimport name from './name';\n\nconst appReducer = combineReducers({\n  costModifier,\n  ship,\n  name\n});\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case 'IMPORT_SHIP': {\n      console.log(action.state);\n      return appReducer(action.state, action);\n    }\n    case 'CLEAR': {\n      return appReducer(undefined, action);\n    }\n    default: {\n      return appReducer(state, action);\n    }\n  }\n}\n\nexport default rootReducer;","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst persistedStore = () => {\n  const store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  );\n  const persistor = persistStore(store);\n  return {store, persistor};\n}\n\nexport default persistedStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport persistedStore from './store';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport * as serviceWorker from './serviceWorker';\n\nconst { store, persistor } = persistedStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}